// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	authservice "github.com/rokwire/core-auth-library-go/authservice"
	mock "github.com/stretchr/testify/mock"
)

// ServiceRegLoader is an autogenerated mock type for the ServiceRegLoader type
type ServiceRegLoader struct {
	mock.Mock
	config authservice.RemoteServiceRegLoaderConfig
	*authservice.ServiceRegSubscriptions
}

// LoadServices provides a mock function with given fields:
func (_m *ServiceRegLoader) LoadServices() ([]authservice.ServiceReg, error) {
	ret := _m.Called()

	var r0 []authservice.ServiceReg
	if rf, ok := ret.Get(0).(func() []authservice.ServiceReg); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]authservice.ServiceReg)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

func NewServiceRegLoader(config authservice.RemoteServiceRegLoaderConfig, subscribedServices []string) *ServiceRegLoader {
	subscriptions := authservice.NewServiceRegSubscriptions(subscribedServices)
	return &ServiceRegLoader{config: config, ServiceRegSubscriptions: subscriptions}
}
