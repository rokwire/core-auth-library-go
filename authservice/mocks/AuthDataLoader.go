// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	authservice "github.com/rokwire/core-auth-library-go/authservice"
	mock "github.com/stretchr/testify/mock"
)

// AuthDataLoader is an autogenerated mock type for the AuthDataLoader type
type AuthDataLoader struct {
	mock.Mock
	*ServiceRegLoader
}

// GetAccessToken provides a mock function with given fields: appID, orgID
func (_m *AuthDataLoader) GetAccessToken(appID string, orgID string) error {
	ret := _m.Called(appID, orgID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(appID, orgID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetDeletedAccounts provides a mock function with given fields:
func (_m *AuthDataLoader) GetDeletedAccounts() ([]string, error) {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetServiceAccountParams provides a mock function with given fields:
func (_m *AuthDataLoader) GetServiceAccountParams() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LoadServices provides a mock function with given fields:
func (_m *AuthDataLoader) LoadServices() ([]authservice.ServiceReg, error) {
	ret := _m.Called()

	var r0 []authservice.ServiceReg
	if rf, ok := ret.Get(0).(func() []authservice.ServiceReg); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]authservice.ServiceReg)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

func NewAuthDataLoader(subscribedServices []string) *AuthDataLoader {
	serviceRegLoader := NewServiceRegLoader(subscribedServices)
	return &AuthDataLoader{ServiceRegLoader: serviceRegLoader}
}
